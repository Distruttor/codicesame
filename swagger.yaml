swagger: "2.0"
info:
  version: 1.0.0
  title: "codicesame"
  description: A simple chat system
  termsOfService: http://swagger.io/terms/
  contact:
    name: Mirko Schicchi
    email: mirko.schicchi@gmail.com
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: rocky-plains-88216.herokuapp.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /user:
    post:
      description: Insert a new user
      operationId: addUser
      parameters:
        - name: newUser
          in: body
          description: new user registered 
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: user created response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/{id}:
    get:
      description: Return an user
      parameters:
        - name: id
          in: path
          description: ID of the user to fetch
          required: true
          type: string
      responses:
        200:
          description: OK - user
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Update a user
      parameters:
        - name: id
          in: path
          description: Id of the user to update
          required: true
          type: string
        - name: user
          in: body
          description: user updated
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        200:
          description: OK - user updated
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /room:
    post:
      description: Insert a new room
      parameters:
        - name: newRoom
          in: body
          description: New room
          required: true
          schema:
            $ref: '#/definitions/Room'
      responses:
        200: 
          description: OK - room inserted
          schema:
            $ref: '#/definitions/Room'
            
  /room/{id}:
    put:
      description: Update the name of a room
      parameters:
        - name: id
          in: path
          description: ID of the room
          required: true
          type: string
        - name: room
          in: body
          description: room updated
          required: true
          schema:
            $ref: '#/definitions/NewRoom'
      responses:
        200:
          description: OK - room updated
          schema:
            $ref: '#/definitions/Room'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /msg:
    post:
      description: Add a new message
      parameters:
        - name: message
          in: body
          description: The message
          required: true
          schema:
            $ref: '#/definitions/Message'
      responses: 
        200:
          description: OK - Message inserted
          schema:
            $ref: '#/definitions/NewMessage'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      description: Get all the messages written in a specific room aftar a specific date
      parameters:
        - name: roomID
          in: query
          description: ID of the room
          required: true
          type: string
        - name: time
          in: query
          description: date
          type: string
          format: date
      responses:
        200:
          description: OK - messages get
          schema:
            $ref: '#/definitions/NewMessage'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'  
definitions:
  User:
    required:
      - userID
    allOf:
      - $ref: '#/definitions/NewUser'
    properties:
      userID:
        type: string
  NewUser:
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
  Room:
    required:
      - roomID
    allOf:
      - $ref: '#/definitions/NewRoom'
    properties:
      roomID:
        type: string
  NewRoom:
    required:
      - roomName
    properties:
      roomName:
        type: string  
  NewMessage:
    required:
      - time
    allOf:
      - $ref: '#/definitions/Message'
    properties:
      time:
        type: string
        format: date
  Message:
    required:
      - messageID
      - text
      - roomID
      - authorID
    properties:
      messageID:
        type: string
      text:
        type: string
      roomID:
        type: string
      authorID:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string